/*
 * DataIO - Data IO
 * Copyright (C) 2015 Dansk Bibliotekscenter a/s, Tempovej 7-11, DK-2750 Ballerup,
 * Denmark. CVR: 15149043
 *
 * This file is part of DataIO.
 *
 * DataIO is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * DataIO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DataIO.  If not, see <http://www.gnu.org/licenses/>.
 */

package dk.dbc.dataio.flowstore.entity;

import dk.dbc.dataio.commons.types.SubmitterContent;
import dk.dbc.dataio.jsonb.JSONBContext;
import dk.dbc.dataio.jsonb.JSONBException;

import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.EntityResult;
import javax.persistence.Lob;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.SqlResultSetMappings;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Persistence domain class for submitter objects where id is auto
 * generated by the underlying store and the data content is
 * given as JSON string
 */
@Entity
@Table(name = Submitter.TABLE_NAME)
@NamedQueries({
    @NamedQuery(name = Submitter.QUERY_FIND_ALL, query = "SELECT submitter FROM Submitter submitter ORDER BY submitter.numberIndexValue ASC"),
    @NamedQuery(name = Submitter.QUERY_FIND_ALL_IDS, query = "SELECT submitter.id FROM Submitter submitter"),
    @NamedQuery(name = Submitter.QUERY_FIND_BY_NUMBER, query = Submitter.FIND_BY_NUMBER_QUERY_STRING)
})
public class Submitter extends Versioned {
    private static final JSONBContext jsonbContext = new JSONBContext();
    static final String NUMBER_INDEX_COLUMN = "number_idx";
    public static final String TABLE_NAME = "submitters";
    public static final String QUERY_FIND_ALL = "Submitter.findAll";
    public static final String QUERY_FIND_ALL_IDS = "Submitter.findAllIds";
    public static final String QUERY_FIND_BY_NUMBER = "Submitter.findByNumber";
    public static final String DB_QUERY_PARAMETER_NUMBER = "number";

    public static final String FIND_BY_NUMBER_QUERY_STRING =
            "SELECT submitter FROM Submitter submitter WHERE submitter.numberIndexValue = :" + DB_QUERY_PARAMETER_NUMBER;

    @Column(name = NUMBER_INDEX_COLUMN, nullable = false)
    private Long numberIndexValue;

    Long getNumberIndexValue() {
        return numberIndexValue;
    }

    /**
     * {@inheritDoc}
     * @throws NullPointerException if given null-valued data argument
     * @throws IllegalArgumentException if given empty-valued data argument
     * @throws JSONBException if non-json JSON string or if given JSON is invalid SubmitterContent
     */
    @Override
    public void setContent(String data) throws JSONBException {
        super.setContent(data);
        final SubmitterContent submitterContent = new JSONBContext().unmarshall(data, SubmitterContent.class);
        numberIndexValue = submitterContent.getNumber();
    }
}
