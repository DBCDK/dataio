Check det gamle OCLC projekt ud af subversion

svn co https://svn.dbc.dk/repos/oclc-integration/trunk oclc-integration

***------------------------------------------------------------------------------------------------------------------***

Færdiggør MessageConsumerBean klassen i worldcat sinken i dataIO

1)

Opret en Chunk instans til at holde resultaterne af WorldCat afleveringerne.

2)

Omdan hvert ChunkItem fra input chunken til ChunkItemWithWorldCatAttributes instanser (bemærk, at der potentielt kan
være flere ADDI poster i input, så listen af ChunkItemWithWorldCatAttributes fra ChunkItemWithWorldCatAttributes.of()
kaldet skal kunne håndteres). Exception/RuntimeException fra ChunkItemWithWorldCatAttributes.of() kaldet skal
resultere i et fejlet ChunkItem. Sørg for at der laves ELK logning.

3)

For hvert ChunkItemWithWorldCatAttributes find da WorldCatEntity med OcnRepo.lookupWorldCatEntity(), hvor du bruger
pid værdien fra chunkItemWithWorldCatAttributes.getWorldCatAttributes().getPid(). I dette tilfælde vil den resulterende
liste enten være tom eller indeholde præcis een WorldCatEntity. Hvis listen er tom, lav da ny WorldCatEntity instans
(brug Pid klassen til at udlede agencyId og bibliographicRecordId, sæt checksum til 0)

4)

Lav WciruServiceBroker klasse som instantieres med WciruServiceConnector instans fra konfig bønnen, og som indeholder
følgende metode:

  public ChunkItem push(ChunkItemWithWorldCatAttributes chunkItemWithWorldCatAttributes, WorldCatEntity worldCatEntity);

Kald denne metode for hver ChunkItemWithWorldCatAttributes og indsæt resultat item i resultat chunk.

5)

Implementer WciruServiceBroker.push() metoden.

    a) Hvis chunkItemWithWorldCatAttributes.getChecksum() == worldCatEntity.getChecksum() returner 'ignored' item.

    b) Hvis ikke, skal der kommunikeres med wciru service, så her skal du lade dig kraftig inspirere af kaldene i
       oclc-integration/wciru-gdih-target-plugin/src/main/java/dk/dbc/oclc/wciru/WciruItemHandler.java, nærmere betegnet
       pushTransformedItem() metoden, dog med følgende tilpasninger:

       private boolean isWciruDelete(WorldCatAttributes attributes);
       private void wciruAddOrUpdateRecord(ChunkItemWithWorldCatAttributes chunkItemWithWorldCatAttributes, WorldCatEntity worldCatEntity);
       private void wciruDeleteRecord(ChunkItemWithWorldCatAttributes chunkItemWithWorldCatAttributes, WorldCatEntity worldCatEntity);

       localId er pid.

       Der må ikke boble exceptions ud af WciruServiceBroker.push() metoden.

       Post indholdet skal normaliseres via UnicodeNormalizationFormDecomposed inden det omdannes til Element via
       JaxpUtil.

       Hvor der i den gamle OCLC kode bruges createLocalIdToOcnMapping og lignende til at opdatere det gamle ocn-repo,
       skal du blot opdatere felter i worldCatEntity.

       Hvor der i den gamle OCLC kode logges diagnostics med logWciruResponseDiagnostics, skal disse nu i stedet være
       en del af chunkItem data. Bemærk at wciru servicen returner diagnostics i både fejl- og successcenarier. Brug
       WciruServiceConnectorException.toString(diagnostic) til serialisering.

6)

Hvis WorldCatEntity ikke fandtes i forvejen i basen (punkt 3), sørg da for at den persisteres.






