#!/bin/sh
#
# This script assumes the existence of a localhost postgres database named rawrepo accessible by user/password = $USER/$USER.
# This script assumes that the glassfish server has the org.postgresql.Driver on its classpath.
#

set -x # echo on

basedir=$(cd `dirname ${0}`; pwd)
. $basedir/devel-base

$glassfish_home/bin/asadmin create-jdbc-connection-pool --datasourceclassname org.postgresql.ds.PGSimpleDataSource --restype javax.sql.DataSource --property User=$user:Password=$user:driverClass=org.postgresql.Driver:ServerName=localhost:DatabaseName=rawrepo $rawrepo_pool_resource
$glassfish_home/bin/asadmin ping-connection-pool $rawrepo_pool_resource
$glassfish_home/bin/asadmin create-jdbc-resource --connectionpoolid $rawrepo_pool_resource $rawrepo_resource
$glassfish_home/bin/asadmin create-custom-resource --restype=java.lang.String --factoryclass=org.glassfish.resources.custom.factory.PrimitivesAndStringFactory --property value=$filestore_endpoint $filestore_endpoint_resource
$glassfish_home/bin/asadmin create-custom-resource --restype=java.lang.String --factoryclass=org.glassfish.resources.custom.factory.PrimitivesAndStringFactory --property value=$jobstore_endpoint $jobstore_endpoint_resource

logback_template=$basedir/logback-include.template
logback_include=$basedir/logback-include.xml
cp $logback_template $logback_include
for var in "LOG_DIR"
do
    eval value=\$$var
    sed -i "s|\$$var|$value|g" $logback_include
done

$glassfish_home/bin/asadmin create-custom-resource --restype=java.lang.String --factoryclass=org.glassfish.resources.custom.factory.PrimitivesAndStringFactory --property value="file\://$logback_include" $logback_resource
